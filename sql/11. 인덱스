1. 인덱스: 데이터 취득을 고속화 하는 오브젝트
  색인열: 1개 또는 복수의 열조합으로 작성, 복수열로 작성된 색인은 컴포지트 색인(연결색인)이라 함
    색인열을 검색조건에 포함한 쿼리를 고속화 함
  색인 구조: 트리구조 루트 > 브런치 > 리프
    리브에는 열값과 ROWID의 조합으로 격납됨, ROWID에는 행의 위치정보가 저장됨
    색인을 검색하여 ROWID를 취득하고 ROWID를 키로 표에서 열의 값을 집접 취득
  색인의 작성: CREATE [UNIQUE] INDEX 인덱스이름 ON 표명(열명1, 열명2);
    일반적으로 where구에 검색조건에 지정되는 열을 설정
    UNIQUE 지정으로 유니크一意색인을 작성
    다른 유저가 소유한 표에 색인을 작성하기 위해서 그 표의 index오브젝트 권한이 필요 함
    열명은 컴마로 구분한다.
  유니크색인과 비유니크색인
    유니크색인: 색인열의 값이 중복이 없는 것을 보증하는 색인
      주키제약, 유니크제약을 설정하면 자동적으로 유니크색인이 작성되기 때문에 일반적으로는 사용되지 않음
    비유니크색인은 중복이 있는지 보증 안함
  색인 사용 팁
    색인은 검색조건에 매칭하는 데이터가 적을 경우에만 고속화가 유효함, 매칭되는 값이 많을시 전건검색이 효율적이다.
    색인을 사용할지 말지는 옵티마이저가 sql에 실행에 있어서 효율적인가를 판단하여 실행 (오라클 내부컴포넌트)
      where구에 색인열을 지정해도 사용되지 않을 가능성이 있음
    1개의 표의 복수의 색인을 작성할 경우 데이터 변경시 부하가 증가됨, 변경(DML실행)될때마다 색인의 멘테넌스가 발생하기 때문
    
    표를 삭제하면 표에 색인도 함께 삭제됨
    색인을 설정한 표와 색인을 다른 표영역에 격납가능함
    색인을 설정한 표와 색인을 다른 스키마에 격납가능함
  색인의 삭제: DROP INDEX 인덱스이름
  UNUSABLE: 색인의 사용정지: ALTER INDEX 인덱스이름 UNUSABLE 
    색인의 사용정지 해제: ALTER INDEX 인덱스이름 REBUILD 
    사용정지를 하면 세그먼트를 삭제하고 영역을 해방한다. 데이터 딕셔너리의 색인 정의는 삭제안됨
    세그먼트가 삭제되었기 때문에 DML실행에 따른 인덱스멘터넌스는 동작하지 않음
  INVISIBLE: 색인의 불가시화: ALTER INDEX 인덱스이름 INVISIBLE
    세션내에서만 유효: OPTIMIZER_USE_INVISIBLE_INDEXES 초기화 파라메터가 false인 세션에서 색인이 보이지 않게됨
    세션안에서 사용유무 확인후 실제 삭제할지 판단.
    실제로는 존재하기 때문에 DML실행에 따른 인덱스멘터넌스(인덱스 엔트리에 반영)는 동작함, 색인 옵티마이저에 의해 사용되어 지지 않음
  삭제: DROP 
    
2. 시퀀스: 유니크한 값을 갖는 연번을 생성(유니크 값 보증됨)
  시퀀스는 값을 가지는 오브젝트가 아니기 때문에 세그먼트에 저장되지 않음.
  데이터딕셔너리에 관리정보가 저장되지만, 메모리에 캐쉬가 설정되어 있으면 데이터딕셔니리에 악세스 하지 않음
  CREATE SEQUENCE <시퀀스명> ;
  START WITH <초기값> //생략가능 데폴트 1
  INCREMWNT BY <증수분> //생략가능 데폴트 1
  MAXVALUE <최대치> // 생략가능 데폴트 없음
  CYCLE | NOCYCLE // 생략가능 데폴트 NOCYCLE
  CACHE <캐쉬수> | NOCACHE // 생략가능 데폴트 20
  
  삭제: DROP SEQUENCE <시퀀스명> 
  시퀀스명.nextval : 다음값
  시퀀스명.currval : 현제값
  
  유의점: 
    공백이 발생할 가능성이 있음, 공백을 없에기 위해서는 연번을 관리하는 표를 생성하는 방법이 있지만 고속화는 불가능
      한번 시퀀스값이 생성된후 트렌젝션을 통해 롤백이 되었다면 같은 시퀀스 값을 생성하지 않음
      캐쉬된 값(메모리에 미리 생성된 값)은 같은 시퀀스 값을 할당되지 않음
      복수에 표에 사용되어도 상관없음
      사용시 오브젝트에 대한 권한 필요, 다른 스키마의 시퀀스를 사용하려면 select오브젝트 권한 필요

3. 시노님: 오브젝트에 별명을 지어주는 것
  CREATE [OR REPLACE] [PUBLIC] SYNONYM <시노님명> FOR <오브젝트 명>
  생성시 CREATE [PUBRIC: 퍼블릭 시노님의 경우 추가] SYNONYM 권한이 필요함
  프라이베이트 시노님
    소유유저의 스키마에 격납
    소유유저와 시노님이 가리키는 오브젝트에 악세스 가능한 유저가 프라이베이트 시노님에 악세스가능
    시노님자체에 악세스 가능하나고 해서 시노님이 가리키는 오브젝트에 무조건 접근할 수 없다. 권한은 서로 별개임  
  퍼플릭 시노님
    소유유저는 없음
    특정 스키마에 격납 되지 않고 어느 유저나 시노님명으로 악세스가능(오브젝트 권한 불요)
    데이터베이스에서 유니크한 이름으로 할 필요가 있음
    CREATE PUBLIC SYNONYM 시스템 권한이 필요함
  사용예: 이름을 짧게 함: 스키마명.테이블 명을 단축, 같은 이름으로 다른 오브젝트에 접속
  삭제: DROP [PUBRIC: 퍼블릭 시노님의 경우 추가] SYNONYM 시노님이름
    시노님을 삭제해도 시노님이 참조하는 오브젝트는 삭제되지 않음
    
