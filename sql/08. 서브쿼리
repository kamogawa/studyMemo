1. 서브쿼리
  서브쿼리: select문에 select문을 집어 넣는 것
  불특정한 값을 지정할때 서브쿼리를 사용한다.
  한개의 메인쿼리(주질의)에 서브쿼리 수의 제한은 없음, 서브쿼리에 네스트 가능
  괄호를 지정해서 사용한다.
  비교연산자 좌측에 두어도 사용가능 함 (가독성 떨어짐)
  단일행 비교연산자와 복수행비교연산자가 사용가능 

2, 스칼라 서브쿼리 (단일행 서브쿼리)
  단일행 단일열 값을 갖는 쿼리
  단일행 비교 연산자를 사용 = < > <= >= <>
  복수행서브쿼리에 단일행 비교 연자사를 사용하면 에러 발생
  사용가능한 곳: 
    select: WHERE(단독값), FROM (표검색결과 열), HAVING 
    INSERT & UPDATE: SET 또는 WHERE
    DELETE: WHERE
    문자나 숫자 등의 단독값이 지정 가능한 곳
  주의점: 
    복수행 단일열 값을 가질 경우 에러 비스칼라서브쿼리를 사용하면 해결
    단일행 복수열 값을 가질 경우 에러
    0행의 경우 null로 취급 에러는 아님
    
3. 비스칼라 서브쿼리 
  복수행 단일열(복수행 서브쿼리): where의 조건에 서브쿼리 설정시, in, any, all 등을 사용
  생략을 하게 되면 스칼라서브쿼리로 취급되어 에러가 됨.
    in: 또는
    any: in 과 비슷 복수행 값이 앞의 연산자에 충적되면 참
    all: 복수행 값이 모두 충족되야 참 
      SELECT col1, col2 FROM table WHERE col3 > All|ANY (select max(col1) from table2);
    not 뒤를 반전 not in은 <> all과 같다. 
        not in (not x = any) -> <> all
        not x = all   ->  x <> any
        not x < any   ->  x => all
        not x > all   ->  x <= any
    
    서브쿼리의 검색 결과가 null을 포함하는 경우, 부정으로 간주되어 0을 반환한다.
  단일행 복수열: 그다지 사용되지 않음
    검색조건의 좌우변의 타입과 열수가 일치해야한다.
      select col1 from t1 where (col1, col2) = (select col1, col2 from t2 where col1>10);
    
4. 상관서브쿼리
  상관서브쿼리: 메인쿼리를 참조하는 서브쿼리
    상관서브쿼리는 메인과 관련지어져 있기 때문에 단독으로 실행못함   
    보통 서브쿼리는 1번만 실행 되지만, 상관서브쿼리는 주쿼리에서 참조하고 있는 표의 행수 만큼 실행 된다.
  자기상관서브쿼리: 메인쿼리 서브쿼리가 같은 표를 참조하는 서브쿼리, 표별명으로 구분
  
  EXISTS조건: 상관서브쿼리에서 사용 
    서브쿼리가 1행이상 반환하고 있는지 테스트 하는 조건, 좌변이 없음, NOT　EXISTS도 사용가능 -> 한건도 없을 시 참
    select col1, col2 from t1 WHERE EXIST (select * from t2 where t1.col1 = t2.col2);
  상관서브쿼리로는 행의 갱신 및 삭제에서도 사용가능 함. 10장 참조  
    insert into t1 select col1 from t2 where t1.col1 = t2.col1;
    update t1 set col1= (select new_v from t2 where t1.col1 = t2.col1);
    delete t1 where EXIST (select 'x' from t2 where t1.col1 = t2.col1);
  
    
