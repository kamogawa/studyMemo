1. 릴레이션데이터베이스와 SQL
  릴레이션 모델로 작성한 데이터 베이스
  릴레이션모델: 표형식의 데이터 구조를 사용해 데이터를 관리하는 방법 
            1970년 ibm의 Edgar Frank Codd가 제창 
  RDBS: 릴레이션데이터 베이스를 작성하고 이용하기 위한 소프트웨어 
  RDB이외의 데이터베이스
    계층형데이터베이스(계층형모델)
      트리형식의 계층구조로 관리, 부모데이터에 복수의 자식 데이터가 이어지는 형태, 자식데이터는 1개의 부모만 갖는다.
    네트워크형 데이터베이스
      계층형과 유사하나, 자식데이터가 복수의 부모를 갖을수 있음,
    오브젝트 지향 데이터베이스
      자바와 같은 오브젝트 지향 프로그래밍 언어에서 취급하는 데이터구조를 그대로 격납하기 위한 데이터베이스
  
  SQL: RDB를 조작하기 위해 만들어진 언어 structered query lenguage 
    데이터검색: select(dml에 포함?)
    데이터조작 dml manipulation : insert, update, delete, merge
    데이터정의 ddl definition : create drop alter truncate grant revoke
    트렌젝션제어 : commit rollback
    
2. ER(개체관계)모델: 관계모델을 설계할때 사용
  업무에서 사용하는 데이터를 표형식으로 표현 가능하면 관계형데이터베이스로 관리 가능 하지만 표현하는건 간단하지 않음
  릴레이션모델 설계 방법: 데이터를 표의 형태로 만드는 것
    업무내용이나 업무에서 상요하는 데이터를 분석하여 ER모델을 작성 후 표형식으로 변환
  ER모델의 작성 방법
    개체: 현실세계의 물건이나 사건에 대응하는 개념 여러개 속성을 갖는다. 개체=표, 속성=열
         주키속성은 밑줄을 그어준다. 
    관계: 개체간의 의미적인 관련성이 릴레이션쉽
         관계선의 끝에 1 * 개수관계(다중도)를 표시한다.
  ER모델을 표로 변환
    1대다관계를 외부키로 모델화: 외부키로 모델화, 다*의 표에 1의 표로의 외부키 설정
    교차표를 사용하여 다대다관계를 1대다 관계로 분해, 복합주키 설정 
    엔티티 속성을 표의 열로 지정
    열의 데이터 형을 결정
    필요에 따라 명칭을 알파벳으로 변환
    
3. 오라클 데이터베이스의 기초기식
  rdbms의 한종류 
    대량의 데이터를 관리
    데이터를 복수의 이용자가 공유, 동시에 이용가능
    데이터를 고속으로 참조 변경이 가능하여 퍼포먼스가 뛰어남
    데이터의 정합성을 유지하기 위한 다수의 기능 있음 (데이터형, 트렌젝션, 정합성제약)
    데이터가 파손, 장해가 발생해도 쉽게 복구 가능(가용성)
    유저별로 접근, 실행가능 조작을 설정가능하여 부정 이용조삭을 방지(보안)
  sqlplus: 커멘드라인 데이터베이스 관리 툴
    sqlplus커맨드는 '세미콜론;' 을 지정할 필요가 없음
    단축실행 가능함 describe -> desc
       define: 치환변수 확인
       describe: 지정한 표나 오브젝트의 정의를 확인
       exit: sqlplus 또는 db접속종료
       set: 시스템변수 설정
       show: 시스템변수 또는 현행 환경을 표시
       show parameter: 초기화 파라메터 설정치를 표시 
       undefine: 치환변수를 삭제함
    세션: 논리적인 접속상태
    oraclq sql developer: gui 데이터베이스 관리 툴, 
  세그먼트와 표영역
    세그먼트:
      표나 색인등 데이터를 보관하는 오브젝트는 세그먼트라 불리는 기역역이 1대1로 대응한다.
      세그먼트는 표역역이라 불리는 기억역에 격납한다.
    표영역: 1개이상의 데이터파일을 그룹화 한것
      1개의 표영역에는 복수의 세그먼트를 격납할수 있다.
      오브젝트 소유의 유저가 표영역의 쿼터가 있어야 세그먼트를 격납할수 있다.
  오브젝트 소유자로서 유저와 스키마
    오라클유저는 오브젝트의 소유자 역할을 갖는다. 
    스키마: 소유유저 별로 오브젝트를 구분한 상자 같은 것을 스키마라고 한다.
          한유저에게 같은 이름의 스키마가 반드시 존재(1대1 대응)하고 그 유저가 소유한 오브젝는 스키마에 저장된다.
  초기화 파라메터
      시스템의 동작특성을 결정하는 파라메터, 초기화파라메터 파일에 저장됨
      버젼에 따라 설정치 차이가 있음
  alter session set문: 초기화 파라메터를 변경을 위해 사용 
    alter session set 파라메터명='설정치';
    세션레벨로 적용된다. 로그아웃후 재로그인 시 원상태로 돌아와 있음
  
    
  
    
    
    
